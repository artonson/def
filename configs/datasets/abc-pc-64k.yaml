# @package _group_

resolution: high
resolution_q: 0.02
noise: 0.0
compute_metrics: true
save_predictions: false

train:
  - dataset_name: train
    dataset_class:
      _target_: defs.utils.abc_utils.LotsOfHdf5Files
      io:
        _target_: defs.data.PointCloudIO
      filenames: [
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/train/train_0.hdf5',
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/train/train_1.hdf5',
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/train/train_2.hdf5',
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/train/train_3.hdf5'
      ]
      labels: ['points', 'distances']
      transform: ${transform.train}
      max_loaded_files: 4
val:
  - dataset_name: val
    dataset_class:
      _target_: defs.utils.abc_utils.LotsOfHdf5Files
      io:
        _target_: defs.data.PointCloudIO
      filenames: [
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/val/train_0.hdf5',
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/${datasets.noise}/val/train_1.hdf5'
      ]
      labels: ['points', 'distances']
      transform: ${transform.val}
      max_loaded_files: 2
test:
  - dataset_name: test
    dataset_class:
      _target_: defs.utils.abc_utils.LotsOfHdf5Files
      io:
        _target_: defs.data.PointCloudIO
      filenames: [
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/0.0/test/train_0.hdf5',
        '${hydra:runtime.cwd}/data/points/${datasets.resolution}_res.json/0.0/test/train_1.hdf5'
      ]
      labels: ${datasets.test_labels}
      transform: ${transform.test}
      max_loaded_files: 2
      return_index: true

test_labels:
  - 'points'
  - 'distances'
  - 'item_id'
  - 'has_sharp'
  - 'has_smell_coarse_surfaces_by_num_faces'
  - 'has_smell_deviating_resolution'
  - 'has_smell_sharpness_discontinuities'
  - 'has_smell_bad_face_sampling'
  - 'has_smell_mismatching_surface_annotation'
  - 'has_smell_coarse_surfaces_by_angles'