# @package _group_

train: ${transform.test}

val: ${transform.test}

test:
  _target_: sharpf.utils.abc_utils.torch.CompositeTransform
  transforms:
    - _target_: sharpf.utils.abc_utils.torch.DepthToPointCloud
    - _target_: sharpf.utils.abc_utils.torch.RenameKeys
      old_keys: ['image']
      new_keys: ['points']
    - _target_: sharpf.utils.abc_utils.torch.ToTensor
      keys: ['points', 'distances', 'voronoi']
      type: torch.FloatTensor
    - _target_: sharpf.utils.abc_utils.torch.Center
      keys: ['points']
      dim: 0
    - _target_: sharpf.utils.abc_utils.torch.NormalizeByMaxL2
      keys: ['points']
      dim: 1
    - _target_: sharpf.utils.abc_utils.torch.Concatenate
      in_keys: ['points', 'voronoi']
      dim: 1
      out_key: 'points'
    - _target_: sharpf.utils.abc_utils.torch.DeleteKeys
      keys: ['voronoi']
    - _target_: sharpf.utils.abc_utils.torch.ComputeIsFlatProperty
